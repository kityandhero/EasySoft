// <auto-generated />
using System;
using EasySoft.Simple.Tradition.Data.MigrationTools.SqlServer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasySoft.Simple.Tradition.Data.MigrationTools.SqlServer.Migrations
{
    [DbContext(typeof(DataMigrationContext))]
    [Migration("20221216143710_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasySoft.Core.Infrastructure.Repositories.Entities.Implementations.EventTracker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("数据标识");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("EventId")
                        .HasColumnType("bigint")
                        .HasColumnName("event_id")
                        .HasComment("事件标识");

                    b.Property<string>("TrackerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tracker_name")
                        .HasComment("跟踪名称");

                    b.HasKey("Id")
                        .HasName("pk_event_tracker");

                    b.ToTable("event_tracker", (string)null);

                    b.HasComment("事件跟踪");
                });

            modelBuilder.Entity("EasySoft.Core.PermissionServer.Core.Entities.AccessWay", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<int>("Channel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("channel")
                        .HasComment("");

                    b.Property<long>("CreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("create_by")
                        .HasComment("");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("create_time")
                        .HasComment("");

                    b.Property<string>("Expand")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasDefaultValue("")
                        .HasColumnName("expand")
                        .HasComment("");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("group")
                        .HasComment("");

                    b.Property<string>("GuidTag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("guid_tag")
                        .HasComment("");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("")
                        .HasColumnName("ip")
                        .HasComment("");

                    b.Property<long>("ModifyBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("modify_by")
                        .HasComment("");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("modify_time")
                        .HasComment("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasComment("");

                    b.Property<string>("RelativePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("")
                        .HasColumnName("relative_path")
                        .HasComment("");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status")
                        .HasComment("");

                    b.HasKey("Id")
                        .HasName("pk_access_way");

                    b.ToTable("access_way", (string)null);

                    b.HasComment("访问模块");
                });

            modelBuilder.Entity("EasySoft.Core.PermissionServer.Core.Entities.CustomRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("competence")
                        .HasComment("权限集合");

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("content")
                        .HasComment("内容详情");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<long>("CreateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("create_user_id")
                        .HasComment("创建人标识");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("")
                        .HasColumnName("description")
                        .HasComment("简介描述");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("")
                        .HasColumnName("ip")
                        .HasComment("Ip");

                    b.Property<int>("ModuleCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("module_count")
                        .HasComment("模块数量");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status")
                        .HasComment("状态码");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<long>("UpdateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("update_user_id")
                        .HasComment("更新人标识");

                    b.Property<int>("WhetherSuper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("whether_super")
                        .HasComment("超级管理");

                    b.HasKey("Id")
                        .HasName("pk_custom_role");

                    b.ToTable("custom_role", (string)null);

                    b.HasComment("自定义角色");
                });

            modelBuilder.Entity("EasySoft.Core.PermissionServer.Core.Entities.PresetRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("competence")
                        .HasComment("权限集合");

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("content")
                        .HasComment("内容详情");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<long>("CreateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("create_user_id")
                        .HasComment("创建人标识");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("")
                        .HasColumnName("description")
                        .HasComment("简介描述");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("")
                        .HasColumnName("ip")
                        .HasComment("Ip");

                    b.Property<int>("ModuleCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("module_count")
                        .HasComment("模块数量");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status")
                        .HasComment("状态码");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<long>("UpdateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("update_user_id")
                        .HasComment("更新人标识");

                    b.Property<int>("WhetherSuper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("whether_super")
                        .HasComment("超级管理");

                    b.HasKey("Id")
                        .HasName("pk_preset_role");

                    b.ToTable("preset_role", (string)null);

                    b.HasComment("预设角色");
                });

            modelBuilder.Entity("EasySoft.Core.PermissionServer.Core.Entities.RoleGroup", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<int>("Channel")
                        .HasColumnType("int")
                        .HasColumnName("channel")
                        .HasComment("渠道码");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<long>("CreateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("create_user_id")
                        .HasComment("创建人标识");

                    b.Property<string>("CustomRoleCollection")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("custom_role_collection")
                        .HasComment("自定义角色集合");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("")
                        .HasColumnName("ip")
                        .HasComment("Ip");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasComment("角色组名");

                    b.Property<string>("PresetRoleCollection")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("preset_role_collection")
                        .HasComment("预设角色集合");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status")
                        .HasComment("状态码");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<long>("UpdateUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("update_user_id")
                        .HasComment("更新人标识");

                    b.HasKey("Id")
                        .HasName("pk_role_group");

                    b.ToTable("role_group", (string)null);

                    b.HasComment("角色组");
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.Blog", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<string>("Motto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("motto")
                        .HasComment("座右铭");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("pseudonym")
                        .HasComment("笔名");

                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("user_id")
                        .HasComment("用户标识");

                    b.HasKey("Id")
                        .HasName("pk_blog");

                    b.ToTable("blog", (string)null);

                    b.HasComment("博客");

                    b.HasData(
                        new
                        {
                            Id = 364692391288838L,
                            Motto = "",
                            Name = "",
                            Pseudonym = "",
                            UserId = 364692391288837L
                        });
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("user_id")
                        .HasComment("用户标识");

                    b.HasKey("Id")
                        .HasName("pk_customer");

                    b.ToTable("customer", (string)null);

                    b.HasComment("顾客信息");

                    b.HasData(
                        new
                        {
                            Id = 364692391288837L,
                            UserId = 364692391284741L
                        });
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.Post", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<long>("BlogId")
                        .HasColumnType("bigint")
                        .HasColumnName("blog_id")
                        .HasComment("");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("title")
                        .HasComment("");

                    b.HasKey("Id")
                        .HasName("pk_post");

                    b.HasIndex("BlogId")
                        .HasDatabaseName("ix_post_blog_id");

                    b.ToTable("post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 364692391288839L,
                            BlogId = 364692391288838L,
                            Title = "78d202a4115e48d2af216df5eb00d433"
                        },
                        new
                        {
                            Id = 364692391288840L,
                            BlogId = 364692391288838L,
                            Title = "2395d41849c241d5b6cd363e60ffee02"
                        },
                        new
                        {
                            Id = 364692391288841L,
                            BlogId = 364692391288838L,
                            Title = "beb7cd9d702e4ea6a1b3ab2a56ca7ff7"
                        });
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("数据标识");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("alias")
                        .HasComment("别名");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("login_name")
                        .HasComment("登录名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("RealName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("real_name")
                        .HasComment("真实姓名");

                    b.Property<long>("RoleGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_group_id")
                        .HasComment("");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user", (string)null);

                    b.HasComment("基础账户");

                    b.HasData(
                        new
                        {
                            Id = 364692391284741L,
                            Alias = "种子用户",
                            LoginName = "first",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            RealName = "张小明",
                            RoleGroupId = 1L
                        });
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.Post", b =>
                {
                    b.HasOne("EasySoft.Simple.Tradition.Data.Entities.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_blog_blog_id");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("EasySoft.Simple.Tradition.Data.Entities.Blog", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
